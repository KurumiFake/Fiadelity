From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Kevin Raneri <kevin.raneri@gmail.com>
Date: Fri, 18 Nov 2022 15:48:28 -0500
Subject: [PATCH] (Pufferfish-1.19.2) Fix DAB player selection

original commit:
https://github.com/pufferfish-gg/Pufferfish/commit/d3d30cb8a0ebbc28aebb6ff19b374260fca9d3a2

diff --git a/src/main/java/net/minecraft/server/level/ServerLevel.java b/src/main/java/net/minecraft/server/level/ServerLevel.java
index 8dd73398c117f9dd7c3df68e3e40e2ce44b5ce33..78128609e51b64d4d578e1f485a5000619bb66ed 100644
--- a/src/main/java/net/minecraft/server/level/ServerLevel.java
+++ b/src/main/java/net/minecraft/server/level/ServerLevel.java
@@ -755,6 +755,7 @@ public class ServerLevel extends Level implements WorldGenLevel {
             org.spigotmc.ActivationRange.activateEntities(this); // Spigot
             timings.entityTick.startTiming(); // Spigot
             this.entityTickList.forEach((entity) -> {
+                entity.activatedPriorityReset = false; // Pufferfish - DAB
                 if (!entity.isRemoved()) {
                     if (false && this.shouldDiscardEntity(entity)) { // CraftBukkit - We prevent spawning in general, so this butchering is not needed
                         entity.discard();
diff --git a/src/main/java/net/minecraft/world/entity/Entity.java b/src/main/java/net/minecraft/world/entity/Entity.java
index 0bbe944fad76e4c90f1cfe5aecaa53b82da79ee1..cbee7e27efb28af6cc4147a454f78e96f74023a9 100644
--- a/src/main/java/net/minecraft/world/entity/Entity.java
+++ b/src/main/java/net/minecraft/world/entity/Entity.java
@@ -339,6 +339,7 @@ public abstract class Entity implements Nameable, EntityAccess, CommandSource, n
     public void inactiveTick() { }
     // Spigot end
     // Airplane start
+    public boolean activatedPriorityReset = false; // DAB
     public int activatedPriority = gg.airplane.AirplaneConfig.maximumActivationPrio; // golf score
     public final BlockPos.MutableBlockPos cachedBlockPos = new BlockPos.MutableBlockPos(); // used where needed
     public final gg.airplane.entity.CollisionCache collisionCache = new gg.airplane.entity.CollisionCache(this);
diff --git a/src/main/java/org/spigotmc/ActivationRange.java b/src/main/java/org/spigotmc/ActivationRange.java
index 8bf0383a3d6f83846821fa5f4cf92c5adc39d880..cd8be8f9099fa48aecd2eb4877d421caff05a143 100644
--- a/src/main/java/org/spigotmc/ActivationRange.java
+++ b/src/main/java/org/spigotmc/ActivationRange.java
@@ -217,12 +217,16 @@ public class ActivationRange
 
                 // Airplane start
                 if (gg.airplane.AirplaneConfig.dearEnabled && entity.getType().dabEnabled) {
+                    if (!entity.activatedPriorityReset) {
+                        entity.activatedPriorityReset = true;
+                        entity.activatedPriority = gg.pufferfish.pufferfish.PufferfishConfig.maximumActivationPrio;
+                    }
                     Vec3 playerVec = player.position();
                     Vec3 entityVec = entity.position();
                     double diffX = playerVec.x - entityVec.x, diffY = playerVec.y - entityVec.y, diffZ = playerVec.z - entityVec.z;
                     int squaredDistance = (int) (diffX * diffX + diffY * diffY + diffZ * diffZ);
                     entity.activatedPriority = squaredDistance > gg.airplane.AirplaneConfig.startDistanceSquared ?
-                      Math.max(1, Math.min(squaredDistance >> gg.airplane.AirplaneConfig.activationDistanceMod, gg.airplane.AirplaneConfig.maximumActivationPrio)) :
+                      Math.max(1, Math.min(squaredDistance >> gg.airplane.AirplaneConfig.activationDistanceMod, entity.activatedPriority)) :
                       1;
                 } else {
                     entity.activatedPriority = 1;
